var svgLibrary = (function () {
  "use strict";
  var a = (function () {
    function a(a) {
      (this.points = []),
        (this.dragging = !1),
        (this.canvas = document.getElementById(a));
    }
    return (
      (a.prototype.addPoint = function (a, b, c) {
        var d = document.createElementNS(
          "http://www.w3.org/2000/svg",
          "circle"
        );
        d.setAttributeNS(null, "cx", a.toString()),
          d.setAttributeNS(null, "cy", b.toString()),
          d.setAttributeNS(null, "r", "5"),
          d.setAttributeNS(
            null,
            "style",
            "fill: " + c + "; stroke: " + c + "; stroke-width: 1px;"
          ),
          d.addEventListener("mousedown", this.startDrag),
          d.addEventListener("mousemove", this.drag),
          d.addEventListener("mouseup", this.endDrag),
          d.addEventListener("mouseleave", this.endDrag),
          this.points.push(d),
          this.canvas.appendChild(d);
      }),
      (a.prototype.setBackgroundColor = function (a) {
        this.canvas.style.backgroundColor = a;
      }),
      (a.prototype.startDrag = function (a) {
        (this.draggingObject = a.target),
          (this.draggingObject.style.fill = "red"),
          (this.dragging = !0),
          console.log(this.draggingObject);
      }),
      (a.prototype.drag = function (a) {
        this.dragging &&
          this.draggingObject &&
          (console.log("Dragging on " + a.clientX + " " + a.clientY),
          this.draggingObject.setAttributeNS(null, "cx", a.clientX.toString()),
          this.draggingObject.setAttributeNS(null, "cy", a.clientY.toString()));
      }),
      (a.prototype.endDrag = function (a) {
        (this.dragging = !1),
          (this.draggingObject.style.fill = "black"),
          (this.draggingObject = null),
          console.log("Stopped dragging on " + a.clientX + " " + a.clientY);
      }),
      a
    );
  })();
  return { Canvas: a };
})();
//# sourceMappingURL=svg-library.min.js.map
