{"version":3,"file":"svg-library.min.js","sources":["../src/Canvas.ts","../src/ConvexHull.ts","../src/index.ts"],"sourcesContent":["interface Point {\n  x: number;\n  y: number;\n  color: string;\n}\n\nexport type SvgInHtml = HTMLElement & SVGElement;\nexport type SvgCircle = HTMLElement & SVGCircleElement;\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n\nexport class Canvas {\n  private points: SvgCircle[] = [];\n  private canvas: SvgInHtml;\n  private draggingObject: SvgCircle;\n  private dragging = false;\n\n  constructor(canvasId: string) {\n    this.canvas = <SvgInHtml>document.getElementById(canvasId);\n    this.canvas.addEventListener(\"mousemove\", this.drag.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"mouseleave\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"dblclick\", this.addPointOnClick.bind(this));\n  }\n\n  /**\n   * Returns points in canvas\n   */\n  public getPoints(): SvgCircle[] {\n    return this.points;\n  }\n\n  /**\n   * Returns svg canvas\n   */\n  public getCanvas(): SvgInHtml {\n    return this.canvas;\n  }\n\n  /**\n   * Adds point to canvas\n   * @param x x coordinate\n   * @param y y coordinate\n   * @param color color of point\n   */\n  public addPoint(x: number, y: number, color?: string): void {\n    const circle: SvgCircle = <SvgCircle>document.createElementNS(SVG_NAMESPACE, \"circle\");\n    circle.setAttributeNS(null, \"cx\", x.toString());\n    circle.setAttributeNS(null, \"cy\", y.toString());\n    circle.setAttributeNS(null, \"r\", \"3\");\n    circle.setAttributeNS(\n      null,\n      \"style\",\n      `fill: ${color || \"black\"}; stroke: ${color || \"black\"}; stroke-width: 1px; cursor: move;`\n    );\n    circle.addEventListener(\"mousedown\", this.startDrag.bind(this));\n\n    this.points.push(circle);\n    this.canvas.appendChild(circle);\n  }\n\n  /**\n   * Adds point on click\n   * @param event click event\n   */\n  private addPointOnClick(event: MouseEvent) {\n    this.addPoint(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * Sets background color of canvas\n   * @param color\n   */\n  public setBackgroundColor(color: string) {\n    this.canvas.style.backgroundColor = color;\n  }\n\n  /**\n   * Starts dragging point on click\n   * @param event mousedown event\n   */\n  private startDrag(event: MouseEvent) {\n    this.draggingObject = <SvgCircle>event.target;\n    this.draggingObject.style.fill = \"red\";\n    this.dragging = true;\n  }\n\n  /**\n   * Drags element while mouse is clicked\n   * @param event mousemove event\n   */\n  private drag(event: MouseEvent) {\n    if (this.dragging && this.draggingObject) {\n      this.draggingObject.setAttributeNS(null, \"cx\", event.offsetX.toString());\n      this.draggingObject.setAttributeNS(null, \"cy\", event.offsetY.toString());\n    }\n  }\n\n  /**\n   * Stops dragging element\n   * @param event mouseup event\n   */\n  private endDrag(_: MouseEvent) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.draggingObject.style.fill = \"black\";\n      this.draggingObject = null;\n    }\n  }\n\n  /**\n   * Remove all lines from canvas\n   */\n  public removeLines() {\n    let currentLines = this.canvas.getElementsByClassName(\"line\");\n    let currentLinesArray = Array.from(currentLines);\n    currentLinesArray.forEach((line) => line.remove());\n  }\n\n  /**\n   * Remove all points from canvas\n   */\n  public removePoints() {\n    this.points.forEach((p) => p.remove());\n    this.points = [];\n  }\n\n  public clearCanvas() {\n    this.removeLines();\n    this.removePoints();\n  }\n}\n","import { SvgCircle, SvgInHtml, Canvas, SVG_NAMESPACE } from \"./Canvas\";\n\nexport class ConvexHull {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Creates convex hull using Jarvis March algorithm\n   * @param points array of points\n   */\n  public async JarvisMarch(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    const convexHull: SvgCircle[] = [];\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n    });\n\n    let pointOnHull: SvgCircle = leftmostPoint;\n    let endpoint: SvgCircle;\n    let i = 0;\n    do {\n      pointOnHull.style.fill = \"red\";\n      convexHull.push(pointOnHull);\n      endpoint = points[0];\n      let currentLine: SVGLineElement;\n\n      for (let j = 0; j < points.length; j++) {\n        currentLine = this.makeLine(points[j], pointOnHull, \"green\");\n        if (this.isPointEqual(endpoint, pointOnHull) || this.isOnLeft(pointOnHull, endpoint, points[j])) {\n          endpoint = points[j];\n        }\n        await this.timer(5);\n        currentLine?.remove();\n      }\n      if (endpoint) {\n        this.makeLine(endpoint, pointOnHull, \"red\");\n        endpoint.style.fill = \"red\";\n      }\n      pointOnHull = endpoint;\n      i++;\n    } while (!this.isPointEqual(endpoint, convexHull[0]) && i < 50);\n    console.log(convexHull.length);\n    return new Promise((res) => res(convexHull));\n  }\n\n  /**\n   * Colors are points with black color\n   * @param points list of points\n   */\n  colorPointsBlack(points: SvgCircle[]): void {\n    points.forEach((point) => (point.style.fill = \"black\"));\n  }\n\n  /**\n   * Creates convex hull using Graham Scan algorithm\n   * @param points array of points\n   */\n  public async GrahamScan(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    let stack: SvgCircle[] = [];\n\n    // Leftmost point (if two points are equally leftmost, than the point that is lower is selected)\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n\n      if (Number(p.getAttribute(\"cx\")) === Number(leftmostPoint.getAttribute(\"cx\"))) {\n        if (Number(p.getAttribute(\"cy\")) < Number(leftmostPoint.getAttribute(\"cy\"))) {\n          leftmostPoint = p;\n        }\n      }\n    });\n\n    // Sort points by the angle they and leftmost point make with x-axis\n    points.sort((a, b) => (this.isOnLeft(leftmostPoint, a, b) ? -1 : 1));\n\n    let lines: SVGLineElement[] = [];\n\n    for (let i = 0; i < points.length; i++) {\n      let point = points[i];\n\n      while (stack.length > 1 && this.isOnLeft(stack[stack.length - 2], point, stack[stack.length - 1])) {\n        stack.pop().style.fill = \"black\";\n        lines.pop().remove();\n      }\n\n      if (stack.length >= 1) {\n        lines.push(this.makeLine(stack[stack.length - 1], point, \"red\"));\n      }\n\n      stack.push(point);\n      point.style.fill = \"red\";\n      await this.timer(200);\n    }\n\n    // this.makeLine(stack[0], stack[stack.length - 1], \"red\");\n    lines.push(this.makeLine(stack[stack.length - 1], stack[0], \"red\"));\n\n    return new Promise((res) => res(stack));\n  }\n\n  /**\n   * Check if pointC is on left side of line going from pointA to pointB\n   * @param pointA First point\n   * @param pointB Second point\n   * @param pointC Point that we are checking if is on left\n   */\n  private isOnLeft(pointA: SvgCircle, pointB: SvgCircle, pointC: SvgCircle): boolean {\n    const d =\n      (Number(pointC.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\"))) *\n        (Number(pointB.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) -\n      (Number(pointC.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) *\n        (Number(pointB.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\")));\n\n    return d < 0;\n  }\n\n  /**\n   * Detects if points are equal. Points are equal if their coordinates are equal\n   * @param pointA first point\n   * @param pointB second point\n   */\n  private isPointEqual(pointA: SvgCircle, pointB: SvgCircle) {\n    if (\n      Number(pointA.getAttribute(\"cx\")) === Number(pointB.getAttribute(\"cx\")) &&\n      Number(pointA.getAttribute(\"cy\")) === Number(pointB.getAttribute(\"cy\"))\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Add line going from first to second point on canvas\n   * @param pointA first point\n   * @param pointB second point\n   */\n  private makeLine(pointA: SvgCircle, pointB: SvgCircle, color?: string, id?: string): SVGLineElement {\n    var newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    if (id) {\n      newLine.setAttribute(\"id\", id);\n    }\n    newLine.setAttribute(\"class\", \"line\");\n    newLine.setAttribute(\"x1\", pointA.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y1\", pointA.getAttribute(\"cy\"));\n    newLine.setAttribute(\"x2\", pointB.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y2\", pointB.getAttribute(\"cy\"));\n    newLine.setAttribute(\"stroke\", color || \"black\");\n    const canvas = this.canvas.getCanvas();\n    const line = canvas.appendChild(newLine);\n    return line;\n  }\n\n  private timer(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n}\n","import { Canvas } from \"./Canvas\";\nimport { ConvexHull } from \"./ConvexHull\";\nconst svgLibrary = { Canvas, ConvexHull };\nexport default svgLibrary;\n"],"names":["canvasId","canvas","document","getElementById","addEventListener","drag","bind","endDrag","addPointOnClick","Canvas","points","x","y","color","circle","createElementNS","setAttributeNS","toString","startDrag","push","appendChild","event","addPoint","offsetX","offsetY","style","backgroundColor","draggingObject","target","fill","dragging","currentLines","getElementsByClassName","currentLinesArray","Array","from","forEach","line","remove","p","removeLines","removePoints","ConvexHull","Promise","getPoints","colorPointsBlack","convexHull","leftmostPoint","slice","getAttribute","pointOnHull","i","endpoint","currentLine","j","length","makeLine","isPointEqual","isOnLeft","timer","_a","console","log","res","point","stack","sort","a","b","_this","lines","pop","pointA","pointB","pointC","d","id","newLine","setAttribute","getCanvas","ms","setTimeout"],"mappings":"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"}