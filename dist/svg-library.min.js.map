{"version":3,"file":"svg-library.min.js","sources":["../src/Triangulation.ts","../src/Utils.ts","../src/Circle.ts","../src/Canvas.ts","../src/RealPoint.ts","../src/ConvexHull.ts","../src/Edge.ts","../src/KDTree.ts","../src/Voronoi.ts","../src/index.ts"],"sourcesContent":["import { Canvas, Point } from \"./Canvas\";\nimport { Utils } from \"./Utils\";\nimport { RealPoint } from \"./RealPoint\";\nimport { Edge } from \"./Edge\";\n\nexport class Triangulation {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Creates triangulation using sweeping line algorithm\n   */\n  public async SweepingLine(): Promise<SVGLineElement[]> {\n    const polygon = this.canvas.getPolygon();\n    if (polygon == null || polygon.points.length == 0) {\n      alert(\"You have to create a polygon.\");\n      return;\n    }\n    const pointsSorted = [...polygon.points];\n    const points = [...polygon.points];\n    // Sort points lexicographically (primary top to down, secondary left to right)\n    pointsSorted.sort((a, b) => {\n      if (Number(a.getAttribute(\"cy\")) > Number(b.getAttribute(\"cy\"))) {\n        return -1;\n      } else if (Number(a.getAttribute(\"cy\")) === Number(b.getAttribute(\"cy\"))) {\n        if (Number(a.getAttribute(\"cx\")) < Number(b.getAttribute(\"cx\"))) {\n          return -1;\n        } else {\n          return 1;\n        }\n      } else {\n        return 1;\n      }\n    });\n    pointsSorted[0].style.fill = \"green\";\n    pointsSorted[pointsSorted.length - 1].style.fill = \"red\";\n\n    // Split points based on which line they lay\n    const firstIndex = (points.indexOf(pointsSorted[0]) + 1) % points.length;\n    let i = points.length - 1;\n    let currentIndex = firstIndex;\n    let firstPath = [];\n    let secondPath = [];\n    let currentPath = firstPath;\n    let currentColor = \"yellow\";\n\n    while (i > 0) {\n      if (points[currentIndex] == pointsSorted[pointsSorted.length - 1]) {\n        currentPath = secondPath;\n        currentColor = \"white\";\n      } else {\n        points[currentIndex].style.fill = currentColor;\n        currentPath.push(points[currentIndex]);\n      }\n      currentIndex = (currentIndex + 1) % points.length;\n      i--;\n    }\n\n    // Iterate\n    let stack = [];\n    stack.push(pointsSorted[0]);\n    stack.push(pointsSorted[1]);\n\n    for (let i = 2; i < pointsSorted.length; i++) {\n      // if v_i and the top of the stack lie on the same path (left or right)\n      if (\n        (firstPath.includes(pointsSorted[i]) && firstPath.includes(stack[stack.length - 1])) ||\n        (secondPath.includes(pointsSorted[i]) && secondPath.includes(stack[stack.length - 1]))\n      ) {\n        while (stack.length > 1) {\n          if (\n            (firstPath.includes(pointsSorted[i]) &&\n              Utils.isOnLeft(pointsSorted[i], stack[stack.length - 2], stack[stack.length - 1])) ||\n            (secondPath.includes(pointsSorted[i]) &&\n              !Utils.isOnLeft(pointsSorted[i], stack[stack.length - 2], stack[stack.length - 1]))\n          ) {\n            this.canvas.makeLine(pointsSorted[i], stack[stack.length - 2], \"blue\");\n            stack.pop();\n          } else {\n            break;\n          }\n        }\n        stack.push(pointsSorted[i]);\n      } else {\n        const top = stack[stack.length - 1];\n        while (stack.length > 0) {\n          this.canvas.makeLine(pointsSorted[i], stack.pop(), \"red\");\n        }\n        stack.push(top);\n        stack.push(pointsSorted[i]);\n      }\n      await this.timer(500);\n    }\n\n    return;\n  }\n\n  public Delaunay(voronoi: boolean = false): Edge[][] {\n    const triangulationEdges: Edge[] = [];\n    let triangles: Edge[][] = [];\n    const ael = new AEL(triangulationEdges);\n\n    let points = [...this.canvas.getSimplePoints()];\n\n    if (voronoi) {\n      // Add invisible triangle so voronoi will be nicer\n      let pBottomLeft = new RealPoint(-this.canvas.getCanvas().clientWidth, this.canvas.getCanvas().clientHeight * 2);\n      let pBottomRight = new RealPoint(\n        this.canvas.getCanvas().clientWidth * 2,\n        this.canvas.getCanvas().clientHeight * 2\n      );\n      let pTopCenter = new RealPoint(this.canvas.getCanvas().clientWidth / 2, -this.canvas.getCanvas().clientHeight);\n      points = [...points, pBottomLeft, pBottomRight, pTopCenter];\n    }\n\n    const randomPoint = points[0];\n    const closestPoint = points\n      .slice(1)\n      .map((p: Point) => ({ point: p, distance: Utils.Distance(randomPoint, p) }))\n      .sort(\n        (a: { point: Point; distance: number }, b: { point: Point; distance: number }) => a.distance - b.distance\n      )[0].point;\n\n    let pointsOnLeft = points.filter((p) => Utils.isOnLeftPoints(randomPoint, closestPoint, p));\n    let pointsOnRight = points.filter((p) => Utils.isOnLeftPoints(closestPoint, randomPoint, p));\n    let e: Edge;\n    let e2: Edge;\n    let e3: Edge;\n\n    if (pointsOnLeft.length > 0) {\n      e = new Edge(randomPoint, closestPoint);\n      let p: Point = pointsOnLeft.sort((p1, p2) => this.delaunayDistance(p1, e) - this.delaunayDistance(p2, e))[0];\n      e2 = new Edge(closestPoint, p);\n      e3 = new Edge(p, randomPoint);\n    } else {\n      e = new Edge(closestPoint, randomPoint);\n      let p: Point = pointsOnRight.sort((p1, p2) => this.delaunayDistance(p1, e) - this.delaunayDistance(p2, e))[0];\n      e2 = new Edge(randomPoint, p);\n      e3 = new Edge(p, closestPoint);\n    }\n\n    ael.add(e);\n    ael.add(e2);\n    ael.add(e3);\n    triangles.push([e, e2, e3]);\n\n    while (!ael.isEmpty()) {\n      let e = ael.firstEdge();\n\n      let p1 = e.pointA;\n      let p2 = e.pointB;\n      let reversedE = new Edge(e.pointB, e.pointA);\n      let pointsLeftOfReversedEdge = points.filter((p) => Utils.isOnLeftPoints(p2, p1, p));\n\n      if (pointsLeftOfReversedEdge.length > 0) {\n        let p: Point = pointsLeftOfReversedEdge\n          .filter((p) => this.delaunayDistance(p, reversedE) != null)\n          .sort((p1, p2) => this.delaunayDistance(p1, reversedE) - this.delaunayDistance(p2, reversedE))[0];\n        let e2 = new Edge(p1, p);\n        let e3 = new Edge(p, p2);\n\n        if (\n          ael.edges.filter((e) => e.pointA == e2.pointA && e.pointB == e2.pointB).length == 0 &&\n          ael.edges.filter((e) => e.pointA == e2.pointB && e.pointB == e2.pointA).length == 0 &&\n          ael.dt.filter((e) => e.pointA == e2.pointA && e.pointB == e2.pointB).length == 0 &&\n          ael.dt.filter((e) => e.pointA == e2.pointB && e.pointB == e2.pointA).length == 0\n        ) {\n          ael.add(e2);\n        }\n\n        if (\n          ael.edges.filter((e) => e.pointA == e3.pointA && e.pointB == e3.pointB).length == 0 &&\n          ael.edges.filter((e) => e.pointA == e3.pointB && e.pointB == e3.pointA).length == 0 &&\n          ael.dt.filter((e) => e.pointA == e3.pointA && e.pointB == e3.pointB).length == 0 &&\n          ael.dt.filter((e) => e.pointA == e3.pointB && e.pointB == e3.pointA).length == 0\n        ) {\n          ael.add(e3);\n        }\n        triangles.push([e, e2, e3]);\n      }\n      ael.removeEdge(e);\n    }\n    if (!voronoi) {\n      triangles.forEach((t) => {\n        this.canvas.makeLinePoints(t[0].pointA, t[0].pointB, \"black\");\n        this.canvas.makeLinePoints(t[1].pointA, t[1].pointB, \"black\");\n        this.canvas.makeLinePoints(t[2].pointA, t[2].pointB, \"black\");\n      });\n    }\n\n    return triangles;\n  }\n\n  private delaunayDistance(point: Point, edge: Edge) {\n    let a = edge.pointA;\n    let b = edge.pointB;\n\n    let c = Utils.GetCenterOfPoints(a, b, point);\n\n    // this.canvas.addPoint(c.x, c.y, \"orange\");\n\n    if (c == null) {\n      return null;\n    }\n\n    let r = Math.sqrt((c.x - point.x) ** 2 + (c.y - point.y) ** 2);\n    // this.canvas.addCircle(c, r, \"orange\");\n\n    // this.canvas.addCircle(c, r);\n\n    if (\n      (Utils.isOnLeftPoints(a, b, c) && Utils.isOnLeftPoints(a, b, point)) ||\n      (!Utils.isOnLeftPoints(a, b, c) && !Utils.isOnLeftPoints(a, b, point))\n    ) {\n      return r;\n    } else {\n      return -r;\n    }\n  }\n\n  private timer(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n\n  private getRandomColor() {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n}\n\nclass AEL {\n  public edges: Edge[] = [];\n  public constructor(public dt: Edge[]) {}\n\n  public add(edge: Edge) {\n    let a = edge.pointA;\n    let b = edge.pointB;\n\n    if (this.edges.filter((e) => e.pointA == b && e.pointB == a).length > 0) {\n      this.edges = this.edges.filter((e) => e.pointA !== a || e.pointB !== b);\n    } else {\n      this.edges.push(edge);\n    }\n    this.dt.push(edge);\n  }\n\n  public isEmpty() {\n    return this.edges.length == 0;\n  }\n\n  public removeEdge(edge: Edge) {\n    this.edges = this.edges.filter((e) => e.pointA !== edge.pointA || e.pointB !== edge.pointB);\n  }\n\n  public firstEdge() {\n    return this.edges[0];\n  }\n}\n","import { SvgCircle, Point } from \"./Canvas\";\nimport { Circle } from \"./Circle\";\nimport { RealPoint } from \"./RealPoint\";\n\nexport class Utils {\n  /**\n   * Check if pointC is on left side of line going from pointA to pointB\n   * @param pointA First point\n   * @param pointB Second point\n   * @param pointC Point that we are checking if is on left\n   */\n  public static isOnLeft(pointA: SvgCircle, pointB: SvgCircle, pointC: SvgCircle): boolean {\n    const d =\n      (Number(pointC.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\"))) *\n        (Number(pointB.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) -\n      (Number(pointC.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) *\n        (Number(pointB.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\")));\n\n    return d < 0;\n  }\n\n  /**\n   * Check if pointC is on left side of line going from pointA to pointB\n   * @param pointA First point\n   * @param pointB Second point\n   * @param pointC Point that we are checking if is on left\n   */\n  public static isOnLeftPoints(pointA: Point, pointB: Point, pointC: Point): boolean {\n    const d = (pointC.x - pointA.x) * (pointB.y - pointA.y) - (pointC.y - pointA.y) * (pointB.x - pointA.x);\n    return d > 0;\n  }\n\n  /**\n   * Calculates squared distance of two points\n   * @param point1\n   * @param point2\n   */\n  public static DistanceSq(point1: Point, point2: Point): number {\n    return Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2);\n  }\n\n  /**\n   * Calculates distance of two points\n   * @param point1\n   * @param point2\n   */\n  public static Distance(point1: Point, point2: Point): number {\n    return Math.sqrt(Utils.DistanceSq(point1, point2));\n  }\n\n  /**\n   * Creates circle where 3 given points are lying on the circle\n   * @param point1\n   * @param point2\n   * @param point3\n   */\n  public static CreateCircleFromPoints(p1: Point, p2: Point, p3: Point) {\n    let center = Utils.GetCenterOfPoints(p1, p2, p3);\n    let r = Math.sqrt(Utils.DistanceSq(center, p1));\n    let c = new Circle(center, r);\n    return c;\n  }\n\n  /**\n   * Get center of three non-colinear points\n   * @param p1\n   * @param p2\n   * @param p3\n   */\n  public static GetCenterOfPoints(p1: Point, p2: Point, p3: Point) {\n    let cp = this.crossProduct(p1, p2, p3);\n    if (cp !== 0) {\n      let p1Sq = Math.pow(p1.x, 2) + Math.pow(p1.y, 2);\n      let p2Sq = Math.pow(p2.x, 2) + Math.pow(p2.y, 2);\n      let p3Sq = Math.pow(p3.x, 2) + Math.pow(p3.y, 2);\n      let num = p1Sq * (p2.y - p3.y) + p2Sq * (p3.y - p1.y) + p3Sq * (p1.y - p2.y);\n      let cx = num / (2.0 * cp);\n      num = p1Sq * (p3.x - p2.x) + p2Sq * (p1.x - p3.x) + p3Sq * (p2.x - p1.x);\n      let cy = num / (2.0 * cp);\n      let center = new RealPoint(cx, cy, \"black\");\n      return center;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Create crossproduct of three vertices\n   * @param p1\n   * @param p2\n   * @param p3\n   */\n  private static crossProduct(p1: Point, p2: Point, p3: Point) {\n    let u1 = p2.x - p1.x;\n    let v1 = p2.y - p1.y;\n    let u2 = p3.x - p1.x;\n    let v2 = p3.y - p1.y;\n    return u1 * v2 - v1 * u2;\n  }\n}\n","import { Point } from \"./Canvas\";\nimport { Utils } from \"./Utils\";\n\nexport class Circle {\n  public constructor(private center: Point, private radius: number) {}\n\n  public isInside(point: Point) {\n    if (Utils.DistanceSq(this.center, point) < Math.pow(this.radius, 2)) {\n      return true;\n    }\n    return false;\n  }\n}\n","export interface Point {\n  x: number;\n  y: number;\n  color: string;\n}\n\nexport type SvgInHtml = HTMLElement & SVGElement;\nexport type SvgCircle = HTMLElement & SVGCircleElement;\nexport type SvgLine = HTMLElement & SVGLineElement;\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n\nexport interface Polygon {\n  points: SvgCircle[];\n  lines: SvgLine[];\n}\n\nexport class Canvas {\n  private points: SvgCircle[] = [];\n  private canvas: SvgInHtml;\n  private draggingObject: SvgCircle;\n  private dragging = false;\n  private polygon: Polygon = { points: [], lines: [] };\n  private creatingPolygon = false;\n\n  constructor(canvasId: string) {\n    this.canvas = <SvgInHtml>document.getElementById(canvasId);\n    this.canvas.addEventListener(\"mousemove\", this.drag.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"mouseleave\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"dblclick\", this.addPointOnClick.bind(this));\n    this.canvas.addEventListener(\"click\", this.addPolygonPoint.bind(this));\n  }\n\n  /**\n   * Returns points in canvas\n   */\n  public getPoints(): SvgCircle[] {\n    return this.points;\n  }\n\n  /**\n   * Returns svg canvas\n   */\n  public getCanvas(): SvgInHtml {\n    return this.canvas;\n  }\n\n  /**\n   * Adds point to canvas\n   * @param x x coordinate\n   * @param y y coordinate\n   * @param color color of point\n   */\n  public addPoint(x: number, y: number, color?: string): SvgCircle {\n    const circle: SvgCircle = <SvgCircle>document.createElementNS(SVG_NAMESPACE, \"circle\");\n    circle.setAttributeNS(null, \"cx\", x.toString());\n    circle.setAttributeNS(null, \"cy\", y.toString());\n    circle.setAttributeNS(null, \"r\", \"3\");\n    circle.setAttributeNS(\n      null,\n      \"style\",\n      `fill: ${color || \"black\"}; stroke: ${color || \"black\"}; stroke-width: 1px; cursor: move;`\n    );\n    circle.addEventListener(\"mousedown\", this.startDrag.bind(this));\n\n    this.points.push(circle);\n    this.canvas.appendChild(circle);\n    return circle;\n  }\n\n  /**\n   * Adds point on click\n   * @param event click event\n   */\n  private addPointOnClick(event: MouseEvent): SvgCircle {\n    return this.addPoint(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * Sets background color of canvas\n   * @param color\n   */\n  public setBackgroundColor(color: string) {\n    this.canvas.style.backgroundColor = color;\n  }\n\n  /**\n   * Starts dragging point on click\n   * @param event mousedown event\n   */\n  private startDrag(event: MouseEvent) {\n    this.draggingObject = <SvgCircle>event.target;\n    this.draggingObject.style.fill = \"red\";\n    this.dragging = true;\n  }\n\n  /**\n   * Drags element while mouse is clicked\n   * @param event mousemove event\n   */\n  private drag(event: MouseEvent) {\n    if (this.dragging && this.draggingObject) {\n      this.draggingObject.setAttributeNS(null, \"cx\", event.offsetX.toString());\n      this.draggingObject.setAttributeNS(null, \"cy\", event.offsetY.toString());\n    }\n  }\n\n  /**\n   * Stops dragging element\n   * @param event mouseup event\n   */\n  private endDrag(_: MouseEvent) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.draggingObject.style.fill = \"black\";\n      this.draggingObject = null;\n    }\n  }\n\n  /**\n   * Remove all lines from canvas\n   */\n  public removeLines() {\n    let currentLines = this.canvas.getElementsByClassName(\"line\");\n    let currentLinesArray = Array.from(currentLines);\n    currentLinesArray.forEach((line) => line.remove());\n  }\n\n  /**\n   * Remove all points from canvas\n   */\n  public removePoints() {\n    this.points.forEach((p) => p.remove());\n    this.points = [];\n  }\n\n  /**\n   * Remove lines and points from canvas\n   */\n  public clearCanvas() {\n    this.removeLines();\n    this.removePoints();\n    this.polygon = { points: [], lines: [] };\n  }\n\n  /**\n   * Adds polygon point\n   * @param event\n   */\n  private addPolygonPoint(event: MouseEvent) {\n    if (this.creatingPolygon) {\n      const point = this.addPointOnClick(event);\n      this.polygon.points.push(point);\n\n      if (this.polygon.points.length > 1) {\n        const secondLastPoint = this.polygon.points[this.polygon.points.length - 2];\n        const line = this.makeLine(point, secondLastPoint);\n        this.polygon.lines.push(line);\n      }\n\n      if (this.polygon.points.length > 2) {\n        if (this.polygon.points.length > 3) {\n          this.polygon.lines.splice(this.polygon.lines.length - 2, 1)[0].remove();\n        }\n        const firstPoint = this.polygon.points[0];\n        const line = this.makeLine(firstPoint, point);\n        this.polygon.lines.push(line);\n      }\n    }\n  }\n\n  /**\n   * Add line going from first to second point on canvas\n   * @param pointA first point\n   * @param pointB second point\n   */\n  public makeLine(pointA: SvgCircle, pointB: SvgCircle, color?: string, id?: string): SvgLine {\n    let newLine: SvgLine = <SvgLine>document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    if (id) {\n      newLine.setAttribute(\"id\", id);\n    }\n    newLine.setAttribute(\"class\", \"line\");\n    newLine.setAttribute(\"x1\", pointA.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y1\", pointA.getAttribute(\"cy\"));\n    newLine.setAttribute(\"x2\", pointB.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y2\", pointB.getAttribute(\"cy\"));\n    newLine.setAttribute(\"stroke\", color || \"black\");\n    const canvas = this.canvas;\n    const line = canvas.appendChild(newLine);\n    return line;\n  }\n\n  /**\n   * Add line going from first to second point on canvas\n   * @param pointA first point\n   * @param pointB second point\n   */\n  public makeLinePoints(pointA: Point, pointB: Point, color?: string, id?: string): SvgLine {\n    let newLine: SvgLine = <SvgLine>document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    if (id) {\n      newLine.setAttribute(\"id\", id);\n    }\n    newLine.setAttribute(\"class\", \"line\");\n    newLine.setAttribute(\"x1\", pointA.x.toString());\n    newLine.setAttribute(\"y1\", pointA.y.toString());\n    newLine.setAttribute(\"x2\", pointB.x.toString());\n    newLine.setAttribute(\"y2\", pointB.y.toString());\n    newLine.setAttribute(\"stroke\", color || \"black\");\n    const canvas = this.canvas;\n    const line = canvas.appendChild(newLine);\n    return line;\n  }\n\n  /**\n   * Returns polygon that is on plane\n   */\n  public getPolygon(): Polygon {\n    return this.polygon;\n  }\n\n  public startCreatingPolygon(): void {\n    this.clearCanvas();\n    this.creatingPolygon = true;\n  }\n\n  public stopCreatingPolygon(): void {\n    this.creatingPolygon = false;\n  }\n\n  /**\n   * Adds n points at random locations\n   * @param n number of points to add\n   */\n  public addRandomPoints(n: number) {\n    for (let i = 0; i < n; i++) {\n      // 50 is padding around edge where we dont want to add points\n      let x = Math.random() * (this.canvas.clientWidth - 50 - 50) + 50;\n      let y = Math.random() * (this.canvas.clientHeight - 50 - 50) + 50;\n      this.addPoint(x, y);\n    }\n  }\n\n  /**\n   * Gets points of canvas in simple format\n   */\n  public getSimplePoints(): Point[] {\n    const simplePoints = this.points.map((point: SvgCircle) => ({\n      x: Number(point.getAttribute(\"cx\")),\n      y: Number(point.getAttribute(\"cy\")),\n      color: \"black\",\n    }));\n\n    return simplePoints;\n  }\n\n  /**\n   * Adds circle with with center and given perimeter\n   * @param center\n   * @param r\n   * @param color\n   */\n  public addCircle(center: Point, r: number, color: string = \"black\") {\n    const circle: SvgCircle = <SvgCircle>document.createElementNS(SVG_NAMESPACE, \"circle\");\n    circle.setAttributeNS(null, \"cx\", center.x.toString());\n    circle.setAttributeNS(null, \"cy\", center.y.toString());\n    circle.setAttributeNS(null, \"r\", r.toString());\n    circle.setAttributeNS(null, \"style\", `fill: none; stroke: ${color}; stroke-width: 1px; cursor: move;`);\n    this.canvas.appendChild(circle);\n    return circle;\n  }\n}\n","import { Point } from \"./Canvas\";\n\nexport class RealPoint implements Point {\n  public constructor(public x: number, public y: number, public color: string = \"black\") {}\n}\n","import { SvgCircle, SvgInHtml, Canvas, SVG_NAMESPACE } from \"./Canvas\";\nimport { Utils } from \"./Utils\";\n\nexport class ConvexHull {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Creates convex hull using Jarvis March algorithm\n   * @param points array of points\n   */\n  public async JarvisMarch(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    const convexHull: SvgCircle[] = [];\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n    });\n\n    let pointOnHull: SvgCircle = leftmostPoint;\n    let endpoint: SvgCircle;\n    let i = 0;\n    do {\n      pointOnHull.style.fill = \"red\";\n      convexHull.push(pointOnHull);\n      endpoint = points[0];\n      let currentLine: SVGLineElement;\n\n      for (let j = 0; j < points.length; j++) {\n        currentLine = this.canvas.makeLine(points[j], pointOnHull, \"green\");\n        if (this.isPointEqual(endpoint, pointOnHull) || Utils.isOnLeft(pointOnHull, endpoint, points[j])) {\n          endpoint = points[j];\n        }\n        await this.timer(5);\n        currentLine?.remove();\n      }\n      if (endpoint) {\n        this.canvas.makeLine(endpoint, pointOnHull, \"red\");\n        endpoint.style.fill = \"red\";\n      }\n      pointOnHull = endpoint;\n      i++;\n    } while (!this.isPointEqual(endpoint, convexHull[0]) && i < 50);\n    return new Promise((res) => res(convexHull));\n  }\n\n  /**\n   * Colors are points with black color\n   * @param points list of points\n   */\n  colorPointsBlack(points: SvgCircle[]): void {\n    points.forEach((point) => (point.style.fill = \"black\"));\n  }\n\n  /**\n   * Creates convex hull using Graham Scan algorithm\n   * @param points array of points\n   */\n  public async GrahamScan(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    let stack: SvgCircle[] = [];\n\n    // Leftmost point (if two points are equally leftmost, than the point that is lower is selected)\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n\n      if (Number(p.getAttribute(\"cx\")) === Number(leftmostPoint.getAttribute(\"cx\"))) {\n        if (Number(p.getAttribute(\"cy\")) < Number(leftmostPoint.getAttribute(\"cy\"))) {\n          leftmostPoint = p;\n        }\n      }\n    });\n\n    // Sort points by the angle they and leftmost point make with x-axis\n    points.sort((a, b) => (Utils.isOnLeft(leftmostPoint, a, b) ? -1 : 1));\n\n    let lines: SVGLineElement[] = [];\n\n    for (let i = 0; i < points.length; i++) {\n      let point = points[i];\n\n      while (stack.length > 1 && Utils.isOnLeft(stack[stack.length - 2], point, stack[stack.length - 1])) {\n        stack.pop().style.fill = \"black\";\n        lines.pop().remove();\n      }\n\n      if (stack.length >= 1) {\n        lines.push(this.canvas.makeLine(stack[stack.length - 1], point, \"red\"));\n      }\n\n      stack.push(point);\n      point.style.fill = \"red\";\n      await this.timer(200);\n    }\n\n    // this.makeLine(stack[0], stack[stack.length - 1], \"red\");\n    lines.push(this.canvas.makeLine(stack[stack.length - 1], stack[0], \"red\"));\n\n    return new Promise((res) => res(stack));\n  }\n\n  /**\n   * Detects if points are equal. Points are equal if their coordinates are equal\n   * @param pointA first point\n   * @param pointB second point\n   */\n  private isPointEqual(pointA: SvgCircle, pointB: SvgCircle) {\n    if (\n      Number(pointA.getAttribute(\"cx\")) === Number(pointB.getAttribute(\"cx\")) &&\n      Number(pointA.getAttribute(\"cy\")) === Number(pointB.getAttribute(\"cy\"))\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private timer(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n}\n","import { Point } from \"./Canvas\";\n\nexport class Edge {\n  constructor(public pointA: Point, public pointB: Point) {}\n}\n","import { Canvas, Point } from \"./Canvas\";\n\nexport class KDTree {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  public buildKDTree(\n    points: Point[],\n    depth: number,\n    leftX: number = 0,\n    rightX: number = Number(this.canvas.getCanvas().clientWidth),\n    topY: number = 0,\n    bottomY: number = Number(this.canvas.getCanvas().clientHeight)\n  ): KDNode {\n    if (points.length == 1) {\n      return new KDNode(2, 1, points[0], null, null, null);\n    }\n    let p1: Point[];\n    let p2: Point[];\n    let medianPoint: Point;\n    let v_left: KDNode;\n    let v_right: KDNode;\n    if (!(depth % 2)) {\n      // Vertical\n      const sortedPointsByX = this.sortPoints(points, \"x\");\n      medianPoint = this.selectMedianPoint(sortedPointsByX);\n      this.drawLine(bottomY, topY, medianPoint.x, \"x\");\n      [p1, p2] = this.splitByMedianPoint(sortedPointsByX);\n      v_left = this.buildKDTree(p1, depth + 1, leftX, medianPoint.x, topY, bottomY);\n      v_right = this.buildKDTree(p2, depth + 1, medianPoint.x, rightX, topY, bottomY);\n    } else {\n      // Horizontal\n      const sortedPointsByY = this.sortPoints(points, \"y\");\n      medianPoint = this.selectMedianPoint(sortedPointsByY);\n      this.drawLine(leftX, rightX, medianPoint.y, \"y\");\n      [p1, p2] = this.splitByMedianPoint(sortedPointsByY);\n      v_left = this.buildKDTree(p1, depth + 1, leftX, rightX, topY, medianPoint.y);\n      v_right = this.buildKDTree(p2, depth + 1, leftX, rightX, medianPoint.y, bottomY);\n    }\n\n    const newNode = new KDNode(2, depth, medianPoint, null, v_left, v_right);\n\n    v_left.setParent(newNode);\n    v_right.setParent(newNode);\n\n    return newNode;\n  }\n\n  private sortPoints(points: Point[], axis: \"x\" | \"y\") {\n    const sortedPoints = points.sort((a: Point, b: Point) => {\n      if (axis == \"x\") {\n        return a.x - b.x;\n      } else if (axis == \"y\") {\n        return a.y - b.y;\n      }\n    });\n    return sortedPoints;\n  }\n\n  private splitByMedianPoint(points: Point[]): [Point[], Point[]] {\n    const firstHalf = points.slice(0, Math.floor(points.length / 2));\n    const secondHalf = points.slice(Math.floor(points.length / 2));\n    return [firstHalf, secondHalf];\n  }\n\n  private selectMedianPoint(points: Point[]): Point {\n    return points[Math.floor(points.length / 2)];\n  }\n\n  private drawLine(start: number, end: number, coord: number, axis: \"x\" | \"y\") {\n    //   Vertical (red)\n    if (axis == \"x\") {\n      this.canvas.makeLinePoints({ x: coord, y: start, color: \"\" }, { x: coord, y: end, color: \"\" }, \"red\");\n      //   Horizontal (blue)\n    } else {\n      this.canvas.makeLinePoints({ x: start, y: coord, color: \"\" }, { x: end, y: coord, color: \"\" }, \"blue\");\n    }\n  }\n}\n\nexport class KDNode {\n  private k: number;\n  private depth: number;\n  private point: Point;\n  private parent: KDNode;\n  private lesser: KDNode;\n  private greater: KDNode;\n\n  public constructor(k: number, depth: number, point: Point, parent: KDNode, lesser: KDNode, greater: KDNode) {\n    this.k = k;\n    this.depth = depth;\n    this.point = point;\n    this.parent = parent;\n    this.lesser = lesser;\n    this.greater = greater;\n  }\n\n  public setParent(p: KDNode) {\n    this.parent = p;\n  }\n}\n","import { Canvas, Point } from \"./Canvas\";\nimport { Edge } from \"./Edge\";\nimport { RealPoint } from \"./RealPoint\";\nimport { Triangulation } from \"./Triangulation\";\nimport { Utils } from \"./Utils\";\n\nexport class Voronoi {\n  private canvas: Canvas;\n  private triangles: Edge[][];\n  private centres: Point;\n\n  public constructor(canvas: Canvas) {\n    this.canvas = canvas;\n    this.triangles = new Triangulation(canvas).Delaunay(true);\n\n    let trianglesWithcentres = this.triangles.map((t) => {\n      return { edges: [...t], center: Utils.GetCenterOfPoints(t[0].pointA, t[0].pointB, t[1].pointB) };\n    });\n\n    trianglesWithcentres.forEach((p) => {\n      this.canvas.addPoint(p.center.x, p.center.y, \"red\");\n    });\n\n    trianglesWithcentres.forEach((t1) => {\n      trianglesWithcentres.forEach((t2) => {\n        if (this.areAdjacent(t1.edges, t2.edges)) {\n          this.canvas.makeLinePoints(t1.center, t2.center, \"red\");\n        }\n      });\n    });\n  }\n\n  private areAdjacent(t1: Edge[], t2: Edge[]) {\n    let are = false;\n    t1.forEach((edge) => {\n      if (are) {\n        return;\n      }\n      t2.forEach((edge2) => {\n        if (\n          (edge.pointA == edge2.pointA && edge.pointB == edge2.pointB) ||\n          (edge.pointB == edge2.pointA && edge.pointA == edge2.pointB)\n        ) {\n          are = true;\n          return;\n        }\n      });\n    });\n    return are;\n  }\n\n  public createVoronoiDiagram() {}\n}\n","import { Canvas } from \"./Canvas\";\nimport { ConvexHull } from \"./ConvexHull\";\nimport { Triangulation } from \"./Triangulation\";\nimport { KDTree } from \"./KDTree\";\nimport { Voronoi } from \"./Voronoi\";\nconst svgLibrary = { Canvas, ConvexHull, Triangulation, KDTree, Voronoi };\nexport default svgLibrary;\n"],"names":["Math","floor","sqrt","pow","canvasId","points","lines","canvas","document","getElementById","addEventListener","drag","bind","endDrag","addPointOnClick","addPolygonPoint","Canvas","x","y","color","circle","createElementNS","setAttributeNS","toString","startDrag","push","appendChild","event","addPoint","offsetX","offsetY","style","backgroundColor","draggingObject","target","fill","dragging","currentLines","getElementsByClassName","currentLinesArray","Array","from","forEach","line","remove","p","removeLines","removePoints","polygon","creatingPolygon","point","length","secondLastPoint","makeLine","splice","firstPoint","pointA","pointB","id","newLine","setAttribute","getAttribute","clearCanvas","n","i","random","clientWidth","clientHeight","simplePoints","map","center","r","radius","Circle","Utils","DistanceSq","pointC","d","point1","point2","p1","p2","p3","GetCenterOfPoints","c","cp","crossProduct","p1Sq","p2Sq","p3Sq","num","cx","cy","RealPoint","u1","v1","u2","v2","ConvexHull","Promise","getPoints","colorPointsBlack","convexHull","leftmostPoint","slice","pointOnHull","endpoint","currentLine","j","isPointEqual","isOnLeft","timer","_a","res","stack","sort","a","b","pop","ms","setTimeout","Triangulation","getPolygon","alert","pointsSorted","firstIndex","indexOf","currentIndex","firstPath","secondPath","currentPath","currentColor","i_1","includes","top","voronoi","triangles","ael","AEL","getSimplePoints","pBottomLeft","getCanvas","pBottomRight","pTopCenter","e","e2","e3","randomPoint","closestPoint","distance","Distance","pointsOnLeft","filter","isOnLeftPoints","pointsOnRight","Edge","_this","delaunayDistance","add","e_1","firstEdge","reversedE","pointsLeftOfReversedEdge","e2_1","e3_1","edges","dt","removeEdge","isEmpty","t","makeLinePoints","edge","KDTree","depth","leftX","rightX","topY","bottomY","KDNode","medianPoint","v_left","v_right","sortedPointsByX","sortPoints","selectMedianPoint","drawLine","splitByMedianPoint","buildKDTree","sortedPointsByY","_b","newNode","setParent","axis","sortedPoints","firstHalf","secondHalf","start","end","coord","k","parent","lesser","greater","Delaunay","trianglesWithcentres","t1","t2","areAdjacent","Voronoi","are","edge2"],"mappings":"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"}