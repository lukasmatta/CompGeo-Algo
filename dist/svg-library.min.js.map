{"version":3,"file":"svg-library.min.js","sources":["../src/Canvas.ts","../src/Utils.ts","../src/ConvexHull.ts","../src/Triangulation.ts","../src/index.ts"],"sourcesContent":["interface Point {\n  x: number;\n  y: number;\n  color: string;\n}\n\nexport type SvgInHtml = HTMLElement & SVGElement;\nexport type SvgCircle = HTMLElement & SVGCircleElement;\nexport type SvgLine = HTMLElement & SVGLineElement;\n\nexport const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n\nexport interface Polygon {\n  points: SvgCircle[];\n  lines: SvgLine[];\n}\n\nexport class Canvas {\n  private points: SvgCircle[] = [];\n  private canvas: SvgInHtml;\n  private draggingObject: SvgCircle;\n  private dragging = false;\n  private polygon: Polygon = { points: [], lines: [] };\n  private creatingPolygon = false;\n\n  constructor(canvasId: string) {\n    this.canvas = <SvgInHtml>document.getElementById(canvasId);\n    this.canvas.addEventListener(\"mousemove\", this.drag.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"mouseleave\", this.endDrag.bind(this));\n    this.canvas.addEventListener(\"dblclick\", this.addPointOnClick.bind(this));\n    this.canvas.addEventListener(\"click\", this.addPolygonPoint.bind(this));\n  }\n\n  /**\n   * Returns points in canvas\n   */\n  public getPoints(): SvgCircle[] {\n    return this.points;\n  }\n\n  /**\n   * Returns svg canvas\n   */\n  public getCanvas(): SvgInHtml {\n    return this.canvas;\n  }\n\n  /**\n   * Adds point to canvas\n   * @param x x coordinate\n   * @param y y coordinate\n   * @param color color of point\n   */\n  public addPoint(x: number, y: number, color?: string): SvgCircle {\n    const circle: SvgCircle = <SvgCircle>document.createElementNS(SVG_NAMESPACE, \"circle\");\n    circle.setAttributeNS(null, \"cx\", x.toString());\n    circle.setAttributeNS(null, \"cy\", y.toString());\n    circle.setAttributeNS(null, \"r\", \"3\");\n    circle.setAttributeNS(\n      null,\n      \"style\",\n      `fill: ${color || \"black\"}; stroke: ${color || \"black\"}; stroke-width: 1px; cursor: move;`\n    );\n    circle.addEventListener(\"mousedown\", this.startDrag.bind(this));\n\n    this.points.push(circle);\n    this.canvas.appendChild(circle);\n    return circle;\n  }\n\n  /**\n   * Adds point on click\n   * @param event click event\n   */\n  private addPointOnClick(event: MouseEvent): SvgCircle {\n    return this.addPoint(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * Sets background color of canvas\n   * @param color\n   */\n  public setBackgroundColor(color: string) {\n    this.canvas.style.backgroundColor = color;\n  }\n\n  /**\n   * Starts dragging point on click\n   * @param event mousedown event\n   */\n  private startDrag(event: MouseEvent) {\n    this.draggingObject = <SvgCircle>event.target;\n    this.draggingObject.style.fill = \"red\";\n    this.dragging = true;\n  }\n\n  /**\n   * Drags element while mouse is clicked\n   * @param event mousemove event\n   */\n  private drag(event: MouseEvent) {\n    if (this.dragging && this.draggingObject) {\n      this.draggingObject.setAttributeNS(null, \"cx\", event.offsetX.toString());\n      this.draggingObject.setAttributeNS(null, \"cy\", event.offsetY.toString());\n    }\n  }\n\n  /**\n   * Stops dragging element\n   * @param event mouseup event\n   */\n  private endDrag(_: MouseEvent) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.draggingObject.style.fill = \"black\";\n      this.draggingObject = null;\n    }\n  }\n\n  /**\n   * Remove all lines from canvas\n   */\n  public removeLines() {\n    let currentLines = this.canvas.getElementsByClassName(\"line\");\n    let currentLinesArray = Array.from(currentLines);\n    currentLinesArray.forEach((line) => line.remove());\n  }\n\n  /**\n   * Remove all points from canvas\n   */\n  public removePoints() {\n    this.points.forEach((p) => p.remove());\n    this.points = [];\n  }\n\n  /**\n   * Remove lines and points from canvas\n   */\n  public clearCanvas() {\n    this.removeLines();\n    this.removePoints();\n    this.polygon = { points: [], lines: [] };\n  }\n\n  /**\n   * Adds polygon point\n   * @param event\n   */\n  private addPolygonPoint(event: MouseEvent) {\n    if (this.creatingPolygon) {\n      const point = this.addPointOnClick(event);\n      this.polygon.points.push(point);\n\n      if (this.polygon.points.length > 1) {\n        const secondLastPoint = this.polygon.points[this.polygon.points.length - 2];\n        const line = this.makeLine(point, secondLastPoint);\n        this.polygon.lines.push(line);\n      }\n\n      if (this.polygon.points.length > 2) {\n        if (this.polygon.points.length > 3) {\n          this.polygon.lines.splice(this.polygon.lines.length - 2, 1)[0].remove();\n        }\n        const firstPoint = this.polygon.points[0];\n        const line = this.makeLine(firstPoint, point);\n        this.polygon.lines.push(line);\n      }\n    }\n  }\n\n  /**\n   * Add line going from first to second point on canvas\n   * @param pointA first point\n   * @param pointB second point\n   */\n  public makeLine(pointA: SvgCircle, pointB: SvgCircle, color?: string, id?: string): SvgLine {\n    let newLine: SvgLine = <SvgLine>document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    if (id) {\n      newLine.setAttribute(\"id\", id);\n    }\n    newLine.setAttribute(\"class\", \"line\");\n    newLine.setAttribute(\"x1\", pointA.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y1\", pointA.getAttribute(\"cy\"));\n    newLine.setAttribute(\"x2\", pointB.getAttribute(\"cx\"));\n    newLine.setAttribute(\"y2\", pointB.getAttribute(\"cy\"));\n    newLine.setAttribute(\"stroke\", color || \"black\");\n    const canvas = this.canvas;\n    const line = canvas.appendChild(newLine);\n    return line;\n  }\n\n  /**\n   * Returns polygon that is on plane\n   */\n  public getPolygon(): Polygon {\n    return this.polygon;\n  }\n\n  public startCreatingPolygon(): void {\n    this.clearCanvas();\n    this.creatingPolygon = true;\n  }\n\n  public stopCreatingPolygon(): void {\n    this.creatingPolygon = false;\n  }\n}\n","import { SvgCircle } from \"./Canvas\";\n\nexport class Utils {\n  /**\n   * Check if pointC is on left side of line going from pointA to pointB\n   * @param pointA First point\n   * @param pointB Second point\n   * @param pointC Point that we are checking if is on left\n   */\n  public static isOnLeft(pointA: SvgCircle, pointB: SvgCircle, pointC: SvgCircle): boolean {\n    const d =\n      (Number(pointC.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\"))) *\n        (Number(pointB.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) -\n      (Number(pointC.getAttribute(\"cy\")) - Number(pointA.getAttribute(\"cy\"))) *\n        (Number(pointB.getAttribute(\"cx\")) - Number(pointA.getAttribute(\"cx\")));\n\n    return d < 0;\n  }\n}\n","import { SvgCircle, SvgInHtml, Canvas, SVG_NAMESPACE } from \"./Canvas\";\nimport { Utils } from \"./Utils\";\n\nexport class ConvexHull {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Creates convex hull using Jarvis March algorithm\n   * @param points array of points\n   */\n  public async JarvisMarch(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    const convexHull: SvgCircle[] = [];\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n    });\n\n    let pointOnHull: SvgCircle = leftmostPoint;\n    let endpoint: SvgCircle;\n    let i = 0;\n    do {\n      pointOnHull.style.fill = \"red\";\n      convexHull.push(pointOnHull);\n      endpoint = points[0];\n      let currentLine: SVGLineElement;\n\n      for (let j = 0; j < points.length; j++) {\n        currentLine = this.canvas.makeLine(points[j], pointOnHull, \"green\");\n        if (this.isPointEqual(endpoint, pointOnHull) || Utils.isOnLeft(pointOnHull, endpoint, points[j])) {\n          endpoint = points[j];\n        }\n        await this.timer(5);\n        currentLine?.remove();\n      }\n      if (endpoint) {\n        this.canvas.makeLine(endpoint, pointOnHull, \"red\");\n        endpoint.style.fill = \"red\";\n      }\n      pointOnHull = endpoint;\n      i++;\n    } while (!this.isPointEqual(endpoint, convexHull[0]) && i < 50);\n    return new Promise((res) => res(convexHull));\n  }\n\n  /**\n   * Colors are points with black color\n   * @param points list of points\n   */\n  colorPointsBlack(points: SvgCircle[]): void {\n    points.forEach((point) => (point.style.fill = \"black\"));\n  }\n\n  /**\n   * Creates convex hull using Graham Scan algorithm\n   * @param points array of points\n   */\n  public async GrahamScan(): Promise<SvgCircle[]> {\n    this.canvas.removeLines();\n    const points = this.canvas.getPoints();\n    this.colorPointsBlack(points);\n    let stack: SvgCircle[] = [];\n\n    // Leftmost point (if two points are equally leftmost, than the point that is lower is selected)\n    let leftmostPoint: SvgCircle = points[0];\n\n    // Find the leftmost point\n    points.slice(1).forEach((p: SvgCircle) => {\n      if (Number(p.getAttribute(\"cx\")) < Number(leftmostPoint.getAttribute(\"cx\"))) {\n        leftmostPoint = p;\n      }\n\n      if (Number(p.getAttribute(\"cx\")) === Number(leftmostPoint.getAttribute(\"cx\"))) {\n        if (Number(p.getAttribute(\"cy\")) < Number(leftmostPoint.getAttribute(\"cy\"))) {\n          leftmostPoint = p;\n        }\n      }\n    });\n\n    // Sort points by the angle they and leftmost point make with x-axis\n    points.sort((a, b) => (Utils.isOnLeft(leftmostPoint, a, b) ? -1 : 1));\n\n    let lines: SVGLineElement[] = [];\n\n    for (let i = 0; i < points.length; i++) {\n      let point = points[i];\n\n      while (stack.length > 1 && Utils.isOnLeft(stack[stack.length - 2], point, stack[stack.length - 1])) {\n        stack.pop().style.fill = \"black\";\n        lines.pop().remove();\n      }\n\n      if (stack.length >= 1) {\n        lines.push(this.canvas.makeLine(stack[stack.length - 1], point, \"red\"));\n      }\n\n      stack.push(point);\n      point.style.fill = \"red\";\n      await this.timer(200);\n    }\n\n    // this.makeLine(stack[0], stack[stack.length - 1], \"red\");\n    lines.push(this.canvas.makeLine(stack[stack.length - 1], stack[0], \"red\"));\n\n    return new Promise((res) => res(stack));\n  }\n\n  /**\n   * Detects if points are equal. Points are equal if their coordinates are equal\n   * @param pointA first point\n   * @param pointB second point\n   */\n  private isPointEqual(pointA: SvgCircle, pointB: SvgCircle) {\n    if (\n      Number(pointA.getAttribute(\"cx\")) === Number(pointB.getAttribute(\"cx\")) &&\n      Number(pointA.getAttribute(\"cy\")) === Number(pointB.getAttribute(\"cy\"))\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private timer(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n}\n","import { Canvas, SvgCircle, Polygon } from \"./Canvas\";\nimport { Utils } from \"./Utils\";\n\nexport class Triangulation {\n  canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Creates triangulation using sweeping line algorithm\n   */\n  public async SweepingLine(): Promise<SVGLineElement[]> {\n    const polygon = this.canvas.getPolygon();\n    const pointsSorted = [...polygon.points];\n    const points = [...polygon.points];\n    // Sort points lexicographically (primary top to down, secondary left to right)\n    pointsSorted.sort((a, b) => {\n      if (Number(a.getAttribute(\"cy\")) > Number(b.getAttribute(\"cy\"))) {\n        return -1;\n      } else if (Number(a.getAttribute(\"cy\")) === Number(b.getAttribute(\"cy\"))) {\n        if (Number(a.getAttribute(\"cx\")) < Number(b.getAttribute(\"cx\"))) {\n          return -1;\n        } else {\n          return 1;\n        }\n      } else {\n        return 1;\n      }\n    });\n    pointsSorted[0].style.fill = \"green\";\n    pointsSorted[pointsSorted.length - 1].style.fill = \"red\";\n\n    // Split points based on which line they lay\n    const firstIndex = (points.indexOf(pointsSorted[0]) + 1) % points.length;\n    let i = points.length - 1;\n    let currentIndex = firstIndex;\n    let firstPath = [];\n    let secondPath = [];\n    let currentPath = firstPath;\n    let currentColor = \"yellow\";\n\n    while (i > 0) {\n      console.log(\"checking\", currentIndex);\n      if (points[currentIndex] == pointsSorted[pointsSorted.length - 1]) {\n        currentPath = secondPath;\n        currentColor = \"white\";\n      } else {\n        points[currentIndex].style.fill = currentColor;\n        currentPath.push(points[currentIndex]);\n      }\n      currentIndex = (currentIndex + 1) % points.length;\n      i--;\n    }\n\n    // Iterate\n    let stack = [];\n    stack.push(pointsSorted[0]);\n    stack.push(pointsSorted[1]);\n\n    for (let i = 2; i < pointsSorted.length; i++) {\n      // if v_i and the top of the stack lie on the same path (left or right)\n      if (\n        (firstPath.includes(pointsSorted[i]) && firstPath.includes(stack[stack.length - 1])) ||\n        (secondPath.includes(pointsSorted[i]) && secondPath.includes(stack[stack.length - 1]))\n      ) {\n        while (stack.length > 1) {\n          if (\n            (firstPath.includes(pointsSorted[i]) &&\n              Utils.isOnLeft(pointsSorted[i], stack[stack.length - 2], stack[stack.length - 1])) ||\n            (secondPath.includes(pointsSorted[i]) &&\n              !Utils.isOnLeft(pointsSorted[i], stack[stack.length - 2], stack[stack.length - 1]))\n          ) {\n            this.canvas.makeLine(pointsSorted[i], stack[stack.length - 2], \"blue\");\n            stack.pop();\n          } else {\n            break;\n          }\n        }\n        stack.push(pointsSorted[i]);\n      } else {\n        const top = stack[stack.length - 1];\n        while (stack.length > 0) {\n          this.canvas.makeLine(pointsSorted[i], stack.pop(), \"red\");\n        }\n        stack.push(top);\n        stack.push(pointsSorted[i]);\n      }\n      await this.timer(500);\n    }\n\n    return;\n  }\n\n  private timer(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n\n  private isLineInside(pointA: SvgCircle, pointB: SvgCircle, polygon: Polygon) {}\n}\n","import { Canvas } from \"./Canvas\";\nimport { ConvexHull } from \"./ConvexHull\";\nimport { Triangulation } from \"./Triangulation\";\nconst svgLibrary = { Canvas, ConvexHull, Triangulation };\nexport default svgLibrary;\n"],"names":["canvasId","points","lines","canvas","document","getElementById","addEventListener","drag","bind","endDrag","addPointOnClick","addPolygonPoint","Canvas","x","y","color","circle","createElementNS","setAttributeNS","toString","startDrag","push","appendChild","event","addPoint","offsetX","offsetY","style","backgroundColor","draggingObject","target","fill","dragging","currentLines","getElementsByClassName","currentLinesArray","Array","from","forEach","line","remove","p","removeLines","removePoints","polygon","creatingPolygon","point","length","secondLastPoint","makeLine","splice","firstPoint","pointA","pointB","id","newLine","setAttribute","getAttribute","clearCanvas","Utils","pointC","d","ConvexHull","Promise","getPoints","colorPointsBlack","convexHull","leftmostPoint","slice","pointOnHull","i","endpoint","currentLine","j","isPointEqual","isOnLeft","timer","_a","res","stack","sort","a","b","pop","ms","setTimeout","Triangulation","getPolygon","pointsSorted","firstIndex","indexOf","currentIndex","firstPath","secondPath","currentPath","currentColor","console","log","i_1","includes","top"],"mappings":"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"}